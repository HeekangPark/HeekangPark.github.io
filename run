#!/bin/bash

dir_name=$( dirname $0 )
cd $dir_name

# build image if not exists
if [[ "$(docker images -q jekyll:latest 2> /dev/null)" == "" ]]; then
    docker build -f Dockerfile -t jekyll .
fi

# kill previously running test server
docker rm $(docker stop $(docker ps -a -q --filter ancestor=jekyll:latest --format="{{.ID}}"))

# Show Draft
draft_dir="draft"
draft_sysdoc_hidden="documents/_sysdoc/.draft.html"
draft_sysdoc_exposed="documents/_sysdoc/draft.html"

if [ -d ".$draft_dir" ]; then 
    mv ".$draft_dir" "$draft_dir"
    echo -e "\033[32mDraft : directory activated\033[0m"
fi

if [ -f "$draft_sysdoc_hidden" ]; then 
    mv "$draft_sysdoc_hidden" "$draft_sysdoc_exposed"
    echo -e "\033[32mDraft : sysdoc activated\033[0m"
fi

unset draft_dir
unset draft_sysdoc_hidden
unset draft_sysdoc_exposed

eval "$(conda shell.bash hook)"
conda activate jekyll

python _scripts/updateDateModified.py
python _scripts/mergeConfig.py

if [ -f ".jekyll-metadata" ]; then 
    rm -f ".jekyll-metadata"
fi

# Run Server
docker compose -f docker-compose.yml up
